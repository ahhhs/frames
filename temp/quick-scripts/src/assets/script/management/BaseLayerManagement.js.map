{"version":3,"sources":["assets/script/management/BaseLayerManagement.ts"],"names":[],"mappings":";;;;;AAAA;;;;GAIG;;;;;;;;;AAEH,IAAY,SAIX;AAJD,WAAY,SAAS;IACjB,qCAAI,CAAA;IACJ,iDAAU,CAAA;IACV,2CAAO,CAAA;AACX,CAAC,EAJW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAIpB;AAED;IAAA;IAEA,CAAC;IAAD,eAAC;AAAD,CAFA,AAEC,IAAA;AAEK,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAA;QAGY,SAAI,GAAY,SAAS,CAAC;IA6CtC,CAAC;4BAhDY,mBAAmB;IAM5B,sBAAkB,+BAAQ;aAA1B;YAEI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAmB,EAAE,CAAC;aAC9C;YACD,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAEM,kCAAI,GAAX,UAAY,IAAa,EAAE,IAAc;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEO,sCAAQ,GAAhB,UAAiB,IAAc;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEO,0CAAY,GAApB;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;IACL,CAAC;IACD;;OAEG;IACK,sCAAQ,GAAhB,UAAiB,MAAc;QAC3B,IAAM,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IAChD,CAAC;IACD;;;;OAIG;IACI,sCAAQ,GAAf,UAAgB,IAAY;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC;IACpD,CAAC;;IA9CQ,mBAAmB;QAD/B,OAAO;OACK,mBAAmB,CAgD/B;IAAD,0BAAC;CAhDD,AAgDC,IAAA;AAhDY,kDAAmB","file":"","sourceRoot":"/","sourcesContent":["/*\n * Author: ahhh (new_q8@163.com)\n *\n * Description: ui层级管理器\n */\n\nexport enum LayerType {\n    \"UI\",\n    \"ADAPTIVE\",\n    \"POPUP\",\n}\n\nclass NodeSize {\n    height: number; width: number;\n}\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport class BaseLayerManagement {\n\n    private static _instance: BaseLayerManagement;\n    private root: cc.Node = undefined;\n    private rootZIndex: 0;\n    private size: NodeSize;\n    public static get instance() {\n\n        if (!this._instance) {\n            this._instance = new BaseLayerManagement();\n        }\n        return this._instance;\n    }\n\n    public init(node: cc.Node, size: NodeSize) {\n        this.root = node;\n        this.initData(size);\n        this.addLayerMain();\n    }\n\n    private initData(size: NodeSize) {\n        this.size = size;\n    }\n\n    private addLayerMain() {\n        for (let i = 0; i < 2; i++) {\n            this.addLayer(LayerType[i]);\n        }\n    }\n    /**\n     * 添加层级\n     */\n    private addLayer(string: string) {\n        const node = new cc.Node();\n        node.name = string + \"Layer\";\n        node.width = this.size.width;\n        node.height = this.size.height;\n        this.root.addChild(node, this.rootZIndex++);\n    }\n    /**\n     * 获得一个层级\n     * @param name nodeName\n     * @returns \n     */\n    public getLayer(name: string) {\n        return this.root.getChildByName(name + \"Layer\");\n    }\n\n}\n"]}