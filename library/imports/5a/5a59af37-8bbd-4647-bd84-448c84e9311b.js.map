{"version":3,"sources":["assets/script/management/LoadBase.ts"],"names":[],"mappings":";;;;;AAAA;;;;GAIG;;;;;;;;AAEG,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAA;QAGY,YAAO,GAAqB,IAAI,GAAG,EAAE,CAAC;IAoDlD,CAAC;iBAvDoB,QAAQ;IAKzB,sBAAkB,oBAAQ;aAA1B;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,UAAQ,EAAE,CAAC;aACnC;YACD,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IACD;;;;;OAKG;IACI,6BAAU,GAAjB,UAAkB,GAAW,EAAE,OAAe;QAA9C,iBAYC;QAVG,OAAO,IAAI,OAAO,CAAO,UAAC,GAAG;YACzB,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,MAA8B;gBAChE,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,OAAO;oBAC9B,IAAI,OAAO,YAAY,EAAE,CAAC,MAAM,EAAE;wBAC9B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;wBACxC,GAAG,EAAE,CAAC;qBACT;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACI,8BAAW,GAAlB,UAAmB,GAAW,EAAE,QAAgB;QAAhD,iBAWC;QAVG,OAAO,IAAI,OAAO,CAAO,UAAC,GAAG;YACzB,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,MAA8B;gBAChE,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,OAAO;oBAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACrC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;qBACjD;oBACD,GAAG,EAAE,CAAA;gBACT,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACD;;;OAGG;IACI,8BAAW,GAAlB;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;;IAtDgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAuD5B;IAAD,eAAC;CAvDD,AAuDC,IAAA;kBAvDoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["/*\n * Author: ahhh (new_q8@163.com)\n *\n * Description: 加载基类\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LoadBase {\n\n    private static _instance: LoadBase;\n    private loadArr: Map<string, any> = new Map();\n\n    public static get instance() {\n        if (!this._instance) {\n            this._instance = new LoadBase();\n        }\n        return this._instance;\n    }\n    /**\n     * 加载预制体\n     * @param url 路径\n     * @param asserts 资源name\n     * @returns \n     */\n    public loadPrefab(url: string, asserts: string) {\n\n        return new Promise<void>((res) => {\n            cc.assetManager.loadBundle(url, (ell, bundle: cc.AssetManager.Bundle) => {\n                bundle.load(asserts, (ell, asserts) => {\n                    if (asserts instanceof cc.Prefab) {\n                        this.loadArr.set(asserts.name, asserts);\n                        res();\n                    }\n                });\n            });\n        });\n    }\n\n    /**\n     * 加载预制体文件夹\n     * @param url 路径\n     * @param fileName 文件夹name\n     */\n    public loadPrefabs(url: string, fileName: string) {\n        return new Promise<void>((res) => {\n            cc.assetManager.loadBundle(url, (ell, bundle: cc.AssetManager.Bundle) => {\n                bundle.loadDir(fileName, (ell, asserts) => {\n                    for (let i = 0; i < asserts.length; i++) {\n                        this.loadArr.set(asserts[i].name, asserts[i]);\n                    }\n                    res()\n                });\n            });\n        });\n    }\n    /**\n     * 获得加载列表\n     * @returns \n     */\n    public getLoadList() {\n        return this.loadArr;\n    }\n}\n"]}