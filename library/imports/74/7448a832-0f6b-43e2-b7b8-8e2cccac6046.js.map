{"version":3,"sources":["assets/script/management/LayerBase.ts"],"names":[],"mappings":";;;;;AAAA;;;;GAIG;;;;;;;;;AAEH,uDAAkD;AAGlD,IAAY,SAIX;AAJD,WAAY,SAAS;IACjB,qCAAI,CAAA;IACJ,iDAAU,CAAA;IACV,2CAAO,CAAA;AACX,CAAC,EAJW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAIpB;AAED;IAAA;IAGA,CAAC;IAAD,eAAC;AAAD,CAHA,AAGC,IAAA;AAHY,4BAAQ;AAIf,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAA;QAEY,SAAI,GAAY,SAAS,CAAC;QAG1B,aAAQ,GAAmB,EAAE,CAAC;IAgE1C,CAAC;IA9DG;;;;OAIG;IACI,wBAAI,GAAX,UAAY,IAAa,EAAE,IAAc;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IACD;;OAEG;IACK,gCAAY,GAApB;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1D,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;IACL,CAAC;IACD;;;;OAIG;IACK,4BAAQ,GAAhB,UAAiB,MAAc;QAC3B,IAAM,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAC,IAAI,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IAChD,CAAC;IACD;;;;OAIG;IACI,4BAAQ,GAAf,UAAgB,IAAY;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC;IACpD,CAAC;IACD;;;OAGG;IACI,+BAAW,GAAlB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IACD;;;;;;;;OAQG;IACI,2BAAO,GAAd,UAAe,UAAkB,EAAE,IAAa,EAAE,MAAc,EAAE,SAAyB,EAAE,MAAkB;QAA7C,0BAAA,EAAA,gBAAyB;QAAE,uBAAA,EAAA,UAAkB;QAC3G,IAAI,KAAK,GAAY,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC1C,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;QAClC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACzD,CAAC;IAEM,8BAAU,GAAjB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IApEQ,SAAS;QADrB,OAAO;OACK,SAAS,CAqErB;IAAD,gBAAC;CArED,AAqEC,IAAA;AArEY,8BAAS","file":"","sourceRoot":"/","sourcesContent":["/*\n * Author: ahhh (new_q8@163.com)\n *\n * Description: 层级基类\n */\n\nimport AdaptiveComm from '../common/AdaptiveComm';\nimport AdaptiveComms from '../common/AdaptiveComms';\n\nexport enum LayerType {\n    \"UI\",\n    \"ADAPTIVE\",\n    \"POPUP\",\n}\n\nexport class NodeSize {\n    public height: number;\n    public width: number;\n}\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport class LayerBase {\n\n    private root: cc.Node = undefined;\n    private rootZIndex: 0;\n\n    private nodeList: Array<cc.Node> = [];\n\n    /**\n     * 初始化\n     * @param node 根节点\n     * @param size 屏幕大小\n     */\n    public init(node: cc.Node, size: NodeSize) {\n        this.root = node;\n        this.addLayerMain();\n    }\n    /**\n     * 添加层级入口\n     */\n    private addLayerMain() {\n        for (let i = 0; i < Object.values(LayerType).length / 2; i++) {\n            this.addLayer(LayerType[i]);\n        }\n    }\n    /**\n     * 添加层级\n     * \n     * @description 添加层级node,并且添加适配脚本\n     */\n    private addLayer(string: string) {\n        const node = new cc.Node();\n        node.name = string + \"Layer\";\n        node.addComponent(AdaptiveComm).init();\n        this.root.addChild(node, this.rootZIndex++);\n    }\n    /**\n     * 获得一个层级\n     * @param name nodeName\n     * @returns \n     */\n    public getLayer(name: string) {\n        return this.root.getChildByName(name + \"Layer\");\n    }\n    /**\n     * 获得根节点\n     * @returns \n     */\n    public getRootNode() {\n        return this.root;\n    }\n    /**\n     * 层级添加node\n     * @description 添加目标节点到父节点上,并且绑点相应的脚本\n     * @param parentNode 父节点\n     * @param node 目标节点\n     * @param script 目标脚本\n     * @param isAdpitve 是否使用默认适配方式\n     * @param ZIndex 层级\n     */\n    public addNode(parentNode: number, node: cc.Node, script: string, isAdpitve: boolean = true, ZIndex: number = 0) {\n        let nodes: cc.Node = cc.instantiate(node);\n        nodes.addComponent(script).init();\n        nodes.zIndex = ZIndex;\n        this.getLayer(LayerType[parentNode]).addChild(nodes);\n    }\n\n    public getAllNode() {\n        return this.nodeList;\n    }\n}\n"]}